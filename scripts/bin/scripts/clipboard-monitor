#!/usr/bin/env bb
;; -*- clojure -*-
;; vim: set filetype=clojure:

; Monitors clipboard and collects content over time.
; Useful to collect notes when browsing web for research.
; Use like `clipboard-monitor >> notes.md` to append clipboard changes to a file.

; Would be nice to get rid of polling and use something like
; QClipboard's void selectionChanged() and void dataChanged()
; or like GTK's owner-changed.

(require '[babashka.process :refer [shell]])

;; could be set to newline in case outputs feel too crowded
(def separator "")

(defn get-clipboard []
  (-> (shell {:out :string} "xclip -selection clipboard -o") :out))

(defn monitor-clipboard []
  (let [!val (atom (get-clipboard))]
    (while true
      (let [val (get-clipboard)]
        (when (not= @!val val)
          (reset! !val val)
          (println (str separator val)))
        (Thread/sleep 250)))))

(defn -main [& _args]
  (monitor-clipboard))

(when (= *file* (System/getProperty "babashka.file"))
  (apply -main *command-line-args*))
